@use '../../styles/colors/color-mixins.scss';

pg-radio-inner {
  label {
    --color: var(--pg-fg-accent);
    --size: 16px;
    display: flex;
    padding: 8px;
    align-items: center;
    border-radius: 8px;
    gap: 8px;
    width: 100%;
    color: var(--color);
    position: relative;
  }
  input {
    height: calc(var(--size) - 4px);
    width: calc(var(--size) - 4px);
    margin: 2px;
    position: relative;
  }
  input::before {
    content: '';
    display: inline-block;
    position: absolute;
    top: -2px;
    left: -2px;
    width: var(--size);
    height: var(--size);
    border-radius: 50%;
    border: 2px solid var(--color);
    background-color: var(--pg-bg);
    transition: background-color 0.2s ease;
  }
  input::after {
    content: '';
    display: inline-block;
    position: absolute;
    width: calc(var(--size) - 4px);
    height: calc(var(--size) - 4px);
    border-radius: 50%;
    background-color: var(--color);
    transform-origin: 50% 50%;
    transform: scale(0);
    transition: transform 0.2s ease, background-color 0.2s ease;
  }
  input:focus-visible::before {
    outline: 4px solid var(--pg-cursor);
    transition: background-color 0.2s ease,
      outline-width 0.2s cubic-bezier(0, 0, 0.5, 3);
  }
  @media (hover: hover) {
    input:hover::after {
      transform: scale(0.33);
    }
    input:hover:checked::after {
      background-color: var(--pg-fg-mid);
    }
    input:hover:checked:disabled::after {
      background-color: var(--color);
    }
  }
  input:checked::after {
    transform: scale(1);
    background: var(--color);
  }

  label:has(input:disabled) {
    background-color: var(--pg-bg);
    --color: var(--pg-bg-mid);
  }
  input:disabled:hover::after {
    transform: scale(0);
  }
  input:disabled:hover:checked::after {
    transform: scale(1);
  }
  label:has(input:invalid) {
    @include color-mixins.current-colors(error);
  }
  label:has(input:invalid)::after,
  &.error label::after {
    content: var(--validity, 'is required.');
    position: absolute;
    top: 70%;
    left: calc(var(--size) * 2);
    font-size: 12px;
  }
  label:has(input:invalid:checked)::after,
  &.error label::after {
    content: var(--validity, 'should be unchecked.');
  }
}
